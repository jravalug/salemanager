from app import create_app, db
from app.models import Sale, SaleDetail, Product


excluded_sales_of_jannuary = [
    176,
    177,
    178,
    179,
    180,
    181,
    182,
    184,
    185,
    186,
    187,
    188,
    189,
    190,
    191,
    194,
    195,
    196,
    197,
    199,
    200,
    201,
    202,
    203,
    379,
    380,
    381,
    382,
    383,
    384,
    205,
    206,
    207,
    208,
    209,
    210,
    211,
    213,
    219,
    220,
    222,
    223,
    226,
    228,
    229,
    230,
    232,
    233,
    236,
    237,
    241,
    246,
    249,
    250,
    251,
    252,
    254,
    255,
    256,
    257,
    258,
    259,
    260,
    261,
    262,
    265,
    271,
    272,
    276,
    277,
    278,
    279,
    284,
    285,
    287,
    288,
    289,
    290,
    291,
    295,
    296,
    298,
    299,
    302,
    303,
    304,
    305,
    308,
    309,
    316,
    317,
    318,
    321,
    327,
    329,
    337,
    338,
    339,
    340,
    343,
    346,
    348,
    349,
    365,
    367,
    368,
    351,
    353,
    354,
    355,
    357,
    359,
    360,
    361,
    363,
    369,
    370,
    372,
]


def fill_sale_excluded_data():
    app = create_app()  # Crea la aplicaci√≥n Flask
    with app.app_context():
        # Obtener todas las ventas con campos incompletos
        sales = Sale.query.all()

        print(f"Procesando {len(sales)} ventas...")

        for sale in sales:
            if sale.id in excluded_sales_of_jannuary:
                sale.excluded = True

        # Confirmar todos los cambios en la base de datos
        db.session.commit()
        print("Todos los datos han sido actualizados correctamente.")


# Ejecutar el script
if __name__ == "__main__":
    fill_sale_excluded_data()
